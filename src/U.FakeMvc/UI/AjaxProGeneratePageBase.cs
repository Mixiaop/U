using System;
using System.Web.UI;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Net;
using AjaxPro;
using U.Utilities.Web;
using U.Reflection;
using U.FakeMvc.Controllers;
using U.FakeMvc.Startup;

namespace U.FakeMvc.UI
{
    public abstract class AjaxProGeneratePageBase : System.Web.UI.Page
    {
        private ITypeFinder _typeFinder = UPrimeEngine.Instance.Resolve<ITypeFinder>();
        private IUFakeMvcConfiguration _config = UPrimeEngine.Instance.Resolve<IUFakeMvcConfiguration>();
        protected override void OnLoad(EventArgs e)
        {
            var ajaxTypes = _typeFinder.FindClassesOfType<AjaxControllerBase>();

            if (ajaxTypes != null)
            {
                foreach (var type in ajaxTypes)
                {
                    
                    Utility.RegisterTypeForAjax(type);
                }
            }

            Response.Write(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + " generate complete, path is '" + _config.AjaxProGenerateScriptsPath + "' ");
        }

        protected override void Render(HtmlTextWriter writer)
        {
            StringWriter sw = new StringWriter();
            HtmlTextWriter html = new HtmlTextWriter(sw);
            base.Render(html);

            string pageWriteStr = sw.ToString();
            writer.Write(pageWriteStr);

            StringBuilder scripts = new StringBuilder();
            WebClient webClient = new WebClient();
            Regex reg = new Regex(@"<script type=""text/javascript"" src=""([\s\S]+?)""></script>", RegexOptions.None);
            MatchCollection matchList = reg.Matches(pageWriteStr);
            foreach (Match m in matchList)
            {
                var link = m.Groups[1].ToString();
                var url = "http://" + WebHelper.GetCurrentFullHost() + link;
                var jsBytes = webClient.DownloadData(url);
                var jsScripts = Encoding.GetEncoding("utf-8").GetString(jsBytes);
                jsScripts = jsScripts.Replace("this.xmlHttp.status == 200 && this.xmlHttp.statusText == \"OK\"", "this.xmlHttp.status == 200");
                scripts.Append(jsScripts);
            }

            //保存到文件 
            var scriptContent = scripts.ToString().Replace("//--------------------------------------------------------------", "");
            scriptContent = scriptContent.Replace("// All rights reserved.", "");
            scriptContent = scriptContent.Replace("// Copyright (C) 2006 Michael Schwarz (http://www.ajaxpro.info).", "");

            var path = WebHelper.MapPath(_config.AjaxProGenerateScriptsPath);
            if (!Directory.Exists(Path.GetDirectoryName(path))) {
                Directory.CreateDirectory(Path.GetDirectoryName(path));
            }

            File.WriteAllText(path, "//Generated by U.FakeMvc.UI.AjaxProGeneratePageBase：" + DateTime.Now.ToString("yyyyMMddHHmmss") + scriptContent);
        }
    }
}
